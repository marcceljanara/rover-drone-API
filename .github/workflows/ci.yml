name: Continuous Integration

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ["18.x", "20.x"]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: mysecretpassword
          POSTGRES_DB: roverdrone

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq:management
        ports:
          - 5672:5672
          - 15672:15672
      mosquitto:
        image: eclipse-mosquitto:2
        ports:
          - 1883:1883
          - 9001:9001

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Wait for services
        run: |
          echo "Waiting for PostgreSQL..."
          until nc -z localhost 5432; do sleep 1; done
          echo "Waiting for RabbitMQ..."
          until nc -z localhost 5672; do sleep 1; done
          echo "Waiting for MQTT Broker..."
          until nc -z localhost 1883; do sleep 1; done
      - name: npm install migrate and test
        run: |
          npm install
          npm run migrate up
          npm run test
        env:
          CI: true
          HOST: localhost
          PORT: 3000
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: postgres
          PGPASSWORD: mysecretpassword
          PGDATABASE: roverdrone
          ACCESS_TOKEN_KEY: secret
          REFRESH_TOKEN_KEY: terces
          ACCESS_TOKEN_AGE: 3600
          MQTT_URL: mqtt://localhost
          MQTT_USERNAME: test-user
          MQTT_PASSWORD: test-password
          RABBITMQ_SERVER: amqp://localhost